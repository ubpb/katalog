#record
  .panel.panel-default
    - if @search_request.present?
      .panel-heading.panel-cutoffcorner
        = render "search_results_navigation"

    .panel-body(class=(@search_request.blank? ? "panel-cutoffcorner" : ""))
      ul.nav.nav-tabs
        li.active
          a(href="#record-details-tab" data-toggle="tab")
            | Details

      .tab-content
        #record-details-tab.tab-pane.active
          dl
            dt = "Autor(en)"
            dd.creators = [*@record.fields["creator_contributor_display"]].join("; ")

            dt = "Titel"
            dd.title = @record.fields["title"]

            dt = "Teil von"
            dd.is-part-of
              - if (is_part_of = @record.fields["is_part_of"]).present?
                = is_part_of(@scope, @record.fields)
              - else
                = "–"

            dt = "Auflage"
            dd.edition = @record.fields["edition"].presence || "–"

            dt = "Erscheinungsort"
            dd.place = @record.fields["publisher"].try(:split, ":")[0].try(:strip).presence || "–"

            dt = "Verlag"
            dd.publisher = @record.fields["publisher"].try(:split, ":")[1].try(:strip).presence || "–"

            dt = "Erscheinungsjahr"
            dd.date-of-publication = @record.fields["creationdate"].presence || "–"

        .row
          .col-sm-6
            dl
              dt = "Format"
              dd.format = @record.fields["format"].presence || "–"

              dt = "Sprache(n)"
              dd.language = [*@record.fields["language"]].map{|l| t("languages.#{l}")}.join(", ").presence || "–"

              dt = "Identifikator(en)"
              dd.identicator = "TODO"

              dt = "Erschienen in"
              dd = "TODO"

              dt = "Beschreibungen"
              dd == [*@record.fields["description"]].join("<br/>").presence || "–"

          .col-sm-6
            dl
              dt = "Inhaltsverzeichnisse"
              dd.toc = "TODO"

              dt = "Schlagwörter"
              dd.toc = "TODO"

              dt = "Systemstelle"
              dd.toc = "TODO"

              dt = "Signatur"
              dd.toc = "TODO"

              dt = "Externer Link"
              dd.toc = "TODO"

          /= render_relative "./show/details", notes: @notes, record: @record, scope: @scope, watch_lists: @watch_lists

          - if @items.present?
            = render_relative "./show/items", items: @items


  / = ractive_component "skala.components.RecordActions",
  /   api_v1_record_path: api_v1_record_path(":id"),
  /   api_v1_user_notes_path: api_v1_user_notes_path(":user_id"),
  /   api_v1_user_note_path: api_v1_user_note_path(":user_id", ":id"),
  /   api_v1_user_watch_lists_path: api_v1_user_watch_lists_path(":user_id"),
  /   api_v1_user_watch_list_entries_path: api_v1_user_watch_list_entries_path(":user_id", ":watch_list_id"),
  /   api_v1_user_watch_list_entry_path: api_v1_user_watch_list_entry_path(":user_id", ":watch_list_id", ":id"),
  /   class: "pull-right",
  /   note: @notes.try(:find) { |_note| \
  /     _note.record_id == @record.id\
  /   },\
  /   record: { id: @record.id },
  /   scope: { id: @scope.id },
  /   translations: I18n.config.backend.send(:translations)[current_locale][:components][:RecordActions],
  /   user: current_user.try(:slice, :id),
  /   watch_lists: @watch_lists.try(:map) { |_watch_list| \
  /     _watch_list.slice(:id, :name).merge( \
  /       "entries" => _watch_list.entries.map { |_entry| \
  /         _entry.slice(:id, :record_id, :watch_list_id) \
  /       } \
  /     ) \
  /   }

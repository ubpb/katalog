#record
  .panel.panel-default
    - if @search_request.present?
      .panel-heading.panel-cutoffcorner
        = render "search_results_navigation"

    .panel-body(class=(@search_request.blank? ? "panel-cutoffcorner" : ""))
      ul.nav.nav-tabs
        li.active
          a(href="#record-details-tab" data-toggle="tab")
            | Details
            - if show_availability?(@record)
              =< ractive_component "app.components.AvailabilityIndicator",
                api_v1_record_items_path: api_v1_record_items_path(":record_id"),
                record_id: @record.fields["id"],
                scope_id: @scope.id

      .tab-content
        #record-details-tab.tab-pane.active
          .row
            .col-sm-10
              / Main properties
              = render "details", record: @record, scope: @scope

              / Secondary form properties
              - if is_secondary_form?(@record)
                h4 Angaben zur SekundÃ¤rform
                = render "snd_details", record: @record, scope: @scope
            .col-sm-2
              .image
                = ractive_component "app.components.Image",
                  placeholder: image_tag("record-print-lg.png"),
                  src: amazon_image_url(@record, format: "LZZZZZZZ")

          / Items
          - if @items.present?
            h4 Exemplare
            = render "items",
              user_hold_requests: @user_hold_requests,
              record_holdable_items: @record_holdable_items,
              items: @items,
              number_of_record_hold_requests: @number_of_record_hold_requests

/= render_relative "./show/details", notes: @notes, record: @record, scope: @scope, watch_lists: @watch_lists


/ = ractive_component "app.components.RecordActions",
/   api_v1_record_path: api_v1_record_path(":id"),
/   api_v1_user_notes_path: api_v1_user_notes_path(":user_id"),
/   api_v1_user_note_path: api_v1_user_note_path(":user_id", ":id"),
/   api_v1_user_watch_lists_path: api_v1_user_watch_lists_path(":user_id"),
/   api_v1_user_watch_list_entries_path: api_v1_user_watch_list_entries_path(":user_id", ":watch_list_id"),
/   api_v1_user_watch_list_entry_path: api_v1_user_watch_list_entry_path(":user_id", ":watch_list_id", ":id"),
/   class: "pull-right",
/   note: @notes.try(:find) { |_note| \
/     _note.record_id == @record.id\
/   },\
/   record: { id: @record.id },
/   scope: { id: @scope.id },
/   translations: I18n.config.backend.send(:translations)[current_locale][:components][:RecordActions],
/   user: current_user.try(:slice, :id),
/   watch_lists: @watch_lists.try(:map) { |_watch_list| \
/     _watch_list.slice(:id, :name).merge( \
/       "entries" => _watch_list.entries.map { |_entry| \
/         _entry.slice(:id, :record_id, :watch_list_id) \
/       } \
/     ) \
/   }

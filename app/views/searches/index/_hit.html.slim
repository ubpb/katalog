.hit
  .row
    .col-sm-12
      .image
        = ractive_component "app.components.Image",
          placeholder: image_tag("record-print-lg.png"),
          src: amazon_image_url(hit)

      .metadata
        / Title
        .title = title(hit, scope: scope, search_request: search_request)

        / Superorder
        - if (is_part_of = is_part_of(hit, scope: scope)).present?
         .is-part-of = is_part_of.html_safe

        / Additional record info
        - if (info = additional_record_info(hit)).present?
          .additional-info = info

        - if journal_holdings = journal_holdings(hit)
          .journal-holdings = "Bestand UB: #{journal_holdings}"

        / Status
        .status
          - if show_availability?(hit)
            => ractive_component "app.components.AvailabilityIndicator",
              api_v1_record_items_path: api_v1_record_items_path(":record_id"),
              record_id: hit.fields["id"],
              scope_id: scope.id

          - if (signature = signature(hit, link: true)).present?
            span.signature = "Signatur: #{signature}".html_safe

        / Link to online resource
        - if (links = resource_links(hit, default_link_only: true))
          .link_to_resource
            = links
            = vpn_info


/     /= ractive_component "app.components.Note",
/       note: @notes.try(:find) { |_note| \
/         _note.record_id == hit.id\
/       },\
/       record: { id: hit.id },
/       translations: I18n.config.backend.send(:translations)[current_locale][:components][:Note]

/     /= ractive_component "app.components.WatchLists",
/       record: { id: hit.id },
/       user_watch_list_path: user_watch_list_path(":id"),
/       watch_lists: @watch_lists.try(:as_json, \
/         only: [:id, :name], \
/         include: { \
/           entries: { \
/             only: [:id, :record_id, :watch_list_id] \
/           } \
/         } \
/       )

/   /td
/     = ractive_component "app.components.RecordActions",
/       api_v1_record_path: api_v1_record_path(":id"),
/       api_v1_user_notes_path: api_v1_user_notes_path(":user_id"),
/       api_v1_user_note_path: api_v1_user_note_path(":user_id", ":id"),
/       api_v1_user_watch_lists_path: api_v1_user_watch_lists_path(":user_id"),
/       api_v1_user_watch_list_entries_path: api_v1_user_watch_list_entries_path(":user_id", ":watch_list_id"),
/       api_v1_user_watch_list_entry_path: api_v1_user_watch_list_entry_path(":user_id", ":watch_list_id", ":id"),
/       class: "pull-right",
/       note: @notes.try(:find) { |_note| \
/         _note.record_id == hit.id\
/       },\
/       record: { id: hit.id },
/       scope: { id: hit.scope.id },
/       translations: I18n.config.backend.send(:translations)[current_locale][:components][:RecordActions],
/       user: current_user.try(:slice, :id),
/       watch_lists: @watch_lists.try(:as_json, \
/         only: [:id, :name], \
/         include: { \
/           entries: { \
/             only: [:id, :record_id] \
/           } \
/         } \
/       )

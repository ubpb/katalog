- content_for(:panel_heading) do
  div
    span = t("actions.users.hold_requests#index")
    /.dropdown
      button.btn.btn-default.dropdown-toggle(type="button" data-toggle="dropdown")
        i.fa.fa-cog>
        span.caret

    /  ul.dropdown-menu
        li(class="#{@hold_requests.any?(&:deleteable?) ? '' : 'disabled'}")
          a(href="#" onclick="#{@hold_requests.any?(&:deleteable?) ? javascript_event_handler(:toggle_select_mode)  : ''}")
            i.fa.fa-times>
            = t(".delete_hold_requests")

- if @hold_requests.present?
  = responsive_table do
    table.table.table-striped(data-setup="jquery-tablesorter" data-sortlist="[[1,0]]")
      thead
        tr
          th = t(".title")
          th.text-center = t(".request_date")
          th.text-center = t(".status")

      tbody
        - @hold_requests.each do |_hold_request|
          - _record = @records_by_id[_hold_request.record_id]

          tr
            td: ul
              li
                - if _record.present? && current_scope
                  = link_to value_or_default(title(_record)), record_path(_record.id, scope: current_scope)
                - else
                  = value_or_default(title(_record))

              li.signature = value_or_default(signature(_record, link: true))

            td.text-center = l(_hold_request.request_date)
            td.text-center
              - if _hold_request.place_in_queue
                ul
                  li = t(".queued")
                  li = "(" + t(".place_in_queue", place_in_queue: _hold_request.place_in_queue) + ")"
              - elsif _hold_request.due_date
                = t(".on_hold_until", due_date: l(_hold_request.due_date))
              - elsif _hold_request.request_status  == :in_process
                = t(".in_process")

- else
  .alert.alert-info.cat-no-bottom-margin = t(".no_hold_requests_present")
